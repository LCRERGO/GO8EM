package memory

// +---------------+= 0xFFF (4095) End of Chip-8 RAM
// |               |
// |               |
// |               |
// |               |
// |               |
// | 0x200 to 0xFFF|
// |     Chip-8    |
// | Program / Data|
// |     Space     |
// |               |
// |               |
// |               |
// +- - - - - - - -+= 0x600 (1536) Start of ETI 660 Chip-8 programs
// |               |
// |               |
// |               |
// +---------------+= 0x200 (512) Start of most Chip-8 programs
// | 0x000 to 0x1FF|
// | Reserved for  |
// |  interpreter  |
// +---------------+= 0x000 (0) Start of Chip-8 RAM
//
// Memory size on CHIP-8 goes from
// 0x000 to 0xFFF, thus having
// 4096 (0x1000) bytes in total
type Memory struct {
	data [0x1000]byte
}

func Set(mem *Memory, index int, val uint8) {
	mem.data[index] = val
}

func Get(mem Memory, index int) uint8 {
	return mem.data[index]
}

func Get16(mem Memory, index int) uint16 {
	var fstByte uint16 = uint16(Get(mem, index))
	var sndByte uint16 = uint16(Get(mem, index+1))

	return fstByte<<8 | sndByte
}

var NumberFont []byte = []byte{
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0x0
	0x20, 0x60, 0x20, 0x20, 0x70, // 0x1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 0x2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 0x3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 0x4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 0x5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 0x6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 0x7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 0x8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 0x9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // 0xA
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // 0xB
	0xF0, 0x80, 0x80, 0x80, 0xF0, // 0xC
	0xE0, 0x90, 0x90, 0x90, 0xE0, // 0xD
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // 0xE
	0xF0, 0x80, 0xF0, 0x80, 0x80, // 0xF
}
